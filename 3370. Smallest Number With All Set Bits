You are given a positive number n.

Return the smallest number x greater than or equal to n, such that the binary representation of x contains only set bits

 

Example 1:

Input: n = 5

Output: 7

Explanation:

The binary representation of 7 is "111".

Example 2:

Input: n = 10

Output: 15

Explanation:

The binary representation of 15 is "1111".

Example 3:

Input: n = 3

Output: 3

Explanation:

The binary representation of 3 is "11".

 

Constraints:

1 <= n <= 1000

-------------------------------


Approach: Find The Pattern
Intuition
Enumerate integers that contain only set bits: 1,3,7,15. We can observe that the pattern of this sequence is that each number is obtained by multiplying the previous number by 2 and then adding 1.

We initialize x=1. In each iteration of the loop, we update x as x=xÃ—2+1. The loop continues until x becomes greater than or equal to n, and then we return the result.

code - java: 

class Solution {

    public int smallestNumber(int n) {
        int x = 1;
        while (x < n) {
            x = x * 2 + 1;
        }
        return x;
    }
}



____________________________________________________
Complexity Analysis

Time complexity: O(logn).
The number of iterations is O(logn) times.

Space complexity: O(1).

