There are numBottles water bottles that are initially full of water. You can exchange numExchange empty water bottles from the market with one full water bottle.

The operation of drinking a full water bottle turns it into an empty bottle.

Given the two integers numBottles and numExchange, return the maximum number of water bottles you can drink.

 

Example 1:


Input: numBottles = 9, numExchange = 3
Output: 13
Explanation: You can exchange 3 empty bottles to get 1 full water bottle.
Number of water bottles you can drink: 9 + 3 + 1 = 13.
Example 2:


Input: numBottles = 15, numExchange = 4
Output: 19
Explanation: You can exchange 4 empty bottles to get 1 full water bottle. 
Number of water bottles you can drink: 15 + 3 + 1 = 19.
 

Constraints:

1 <= numBottles <= 100
2 <= numExchange <= 100

--------------------------------------------------------------------------------

Intuition
You start with some full bottles of water. Each time you drink, you get an empty bottle.
You can exchange a certain number of empty bottles (numExchange) for a full one.
Repeat this process until you cannot exchange anymore.

Approach
Initialize drinked = 0 to count total bottles drunk.
Use a loop while there are bottles to drink:
Drink all numBottles, add to drinked.
Add empty bottles to eb.
Exchange as many as possible: numBottles = eb / numExchange.
Keep leftover empties: eb = eb % numExchange.
When no more exchanges are possible, return drinked.
Complexity
Time Complexity: O(log(numBottles)) (each exchange reduces bottles).
Space Complexity: O(1).


class Solution {
    public int numWaterBottles(int numBottles, int numExchange) {
        int drinked = 0;
        int eb = 0; // empty bottles
        
        while (numBottles > 0) {
            drinked += numBottles;   // drink all current bottles
            eb += numBottles;        // get empty bottles
            
            numBottles = eb / numExchange; // exchange empties for new bottles
            eb = eb % numExchange;         // leftover empties
        }
        return drinked;
    }
} //https://youtu.be/Ba8CcL-0lCY?si=Qjxy9kqZ_0-X_cKz
